services:
  app:
    image: golang:1.24-alpine
    working_dir: /app
    volumes:
      - /c/dev/rest-imp:/app
    ports:
      - "3000:3000"
    environment:
      - DATABASE_DSN=host=db port=5432 user=postgres password=justadummy dbname=postgres sslmode=disable
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    entrypoint:
      - sh
      - -c
      - |
        set -xe
        go install github.com/air-verse/air@latest
        air --build.cmd "go build -o ./server ./cmd/api/main.go" --build.bin "./server"

    networks:
      - app-network

  db:
    image: my-postgres-image:latest
    build:
      context: postgres-image/
      dockerfile: Dockerfile
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=justadummy
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: